#!/usr/bin/env bash
# Flutter WSL 適應腳本 Unix & Shell 環境


set -e


# 文件路徑資訊
__filename=`realpath "$0"`
_dirsh=`dirname "$__filename"`


case "$1" in
  wino )
    shift
    ;;
  win | pub | doctor | devices | emulators | run )
    [ "$1" == "win" ] && shift || :
    cd "$_dirsh"
    PowerShell.exe ./flutter.ps1 "$@"
    exit $?
    ;;
esac


# 環境變數
export PUB_CACHE=`realpath "$_dirsh/../.pub-cache"`


cacheUnixDirPath="$_dirsh/cache.unix"
cacheWinDirPath="$_dirsh/cache.win"

flutterBinDirPath=`realpath "$_dirsh/../flutter/bin"`
cacheDirPath="$flutterBinDirPath/cache"

fuCreateWinLink() {
  local winLinkPath="$(wslpath -w "$1")"
  local winTargetPath="$(wslpath -w "$2")"
  PowerShell.exe \
    New-Item "$winTargetPath" -ItemType Junction -Target "$winLinkPath" \
    > /dev/null
}


# 若 $cacheDirPath 路徑存在鏈結文件，
# 則更新其鏈結指向 $cacheUnixDirPath 路徑。
# 若遇非鏈結文件，則拋出無法處理的錯誤。
# 若 $cacheUnixDirPath 路徑不存在，則拋出文件不存在的錯誤。
cacheDirLinkPath="$(readlink "$cacheDirPath")"
if [ "$cacheDirLinkPath" != "$cacheUnixDirPath" ]; then
  if [ -L "$cacheDirPath" ]; then
    rm "$cacheDirPath"
  elif [ -e "$cacheDirPath" ]; then
    echo "無法判斷 cache 文件的重要性 ($cacheDirPath)。" >&2
    exit 1
  fi
  if [ -e "$cacheUnixDirPath" ]; then
    fuCreateWinLink "$cacheUnixDirPath" "$cacheDirPath"
  else
    echo "cache folder for Unix 不存在。" >&2
    exit 1
  fi
fi


case "$1" in
  dart )
    shift
    "$flutterBinDirPath/dart" "$@"
    ;;
  dartaotruntime )
    shift
    "$flutterBinDirPath/cache/dart-sdk/bin/dartaotruntime" "$@"
    ;;
  create )
    shift
    "$flutterBinDirPath/flutter" create --no-pub "$@"
    ;;
  * )
    "$flutterBinDirPath/flutter" "$@"
    ;;
esac

